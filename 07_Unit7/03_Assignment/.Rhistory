demo()
glm()
GLM.VR
glm.vr
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages(c("manipulate", "mgcv"))
clear
close
exit
sd(c(5,8,12))
which.min(c(4,1,6))
Sys.setlocale("LC_ALL", "C")
exit()
quit
1 + 26+40+34+23+26+20+30+15
1 + 26+40+34+23+26+20+30+15 / 60
(1 + 26+40+34+23+26+20+30+15) / 60
(1+6+17+10+15+6+7+5) / 60
(1+8+7+8+4)
1+19+29+22+29+27+18+30+38
(1+19+29+22+29+27+18+30+38)/60
q()
sd(c(5,8,12))
which.min(c(4,1,6))
60 * (15/24)^(1.3-1)
1.71(515-490)
1.71*(515-490)
101*1000*30/ (1200 * 8.314)
(101*1000*30/ (1200 * 8.314)) - 273
10 * (10/7)^2
4.18 * 65
16*8.314*373.15
30 * (.08 *22.6)^1.3
1000*5 * 3.14 * 1.5^2
1000*5 * 3.14 * (1.5)^2
5.34^2 * 936 / 30
333 * (24/15)^0.3
333 * (15/24)^0.3
(101*1000*15*20*5)/(8.314*298.15)
(28.966*101*15*20*5)/(8.314*298.15)
15 * (7/8)^2
quit(0)
exit(0)
exit()
quit("yes")
a = c(100,90,70,65,85)
mean(a)
a = a -mean(a)
a = a^2
sum(a)
a = c(100,90,70,65,85)
sd(a)
a = c(45,80,95,55,30)
a = a - mean(a)
a = a ^2
sum(a)
a = c(45,80,95,55,30)
b = c(40,80,140,60,20)
b = b - a
b = b ^ 2
sum(b)
1 - (2175/2770)
day = c(1,25,46,76,140)
act = c(5,15,22,32,77)
line1 = 0.6 * day
line 2 = 0.5 * day
line2 = 0.5 * day
SST = sum((act - mean(act))^2)
SSE1 = sum((act - line1)^2)
SSE2 = sum((act - line2)^2)
1 - SSE1/SST
1 - SSE2/SST
install.packages("caret")
library(caret)
q()
setwd("~/Documents/01_Courses/13_Analytics_edge_MIT/07_Unit7/03_Assignment")
source('~/Documents/01_Courses/13_Analytics_edge_MIT/07_Unit7/03_Assignment/wordcloud_assignment.R')
wordcloud(colnames(dtm), scale=c(2, 0.25))
colMeans(dtm)
colMeans(dtm$ncol)
dtm$j
wordcloud(colnames(dtm))
wordcloud(colnames(allTweets), colSums(allTweets))
wordcloud(colnames(allTweets), colSums(allTweets))
source('~/Documents/01_Courses/13_Analytics_edge_MIT/07_Unit7/03_Assignment/wordcloud_assignment.R')
source('~/Documents/01_Courses/13_Analytics_edge_MIT/07_Unit7/03_Assignment/wordcloud_assignment.R')
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25))
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25))
dtm
dtmremoved = tm_pre_process_dtm(tweets$Tweet, 1)
tm_pre_process_dtm <- function(data, naremoveWord = 0){
library(tm)
corpusTitle = Corpus(VectorSource(data))
corpusTitle = tm_map(corpusTitle, tolower)
corpusTitle = tm_map(corpusTitle, PlainTextDocument)
corpusTitle = tm_map(corpusTitle, removePunctuation)
if (enaremoveWord ==1){
corpusTitle = tm_map(corpusTitle, removeWords, c(stopwords("english"),"apple"))
} else {
corpusTitle = tm_map(corpusTitle, removeWords, stopwords("english"))
}
dtmTitle = DocumentTermMatrix(corpusTitle)
dtmTitle
}
dtmremoved = tm_pre_process_dtm(tweets$Tweet, 1)
tm_pre_process_dtm <- function(data, enaremoveWord = 0){
library(tm)
corpusTitle = Corpus(VectorSource(data))
corpusTitle = tm_map(corpusTitle, tolower)
corpusTitle = tm_map(corpusTitle, PlainTextDocument)
corpusTitle = tm_map(corpusTitle, removePunctuation)
if (enaremoveWord ==1){
corpusTitle = tm_map(corpusTitle, removeWords, c(stopwords("english"),"apple"))
} else {
corpusTitle = tm_map(corpusTitle, removeWords, stopwords("english"))
}
dtmTitle = DocumentTermMatrix(corpusTitle)
dtmTitle
}
dtmremoved = tm_pre_process_dtm(tweets$Tweet, 1)
dtmremoved
dtm
allTweets = as.data.frame(as.matrix(dtmremoved))
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25))
?wordcloud
negativeTweets = subset(allTweets, tweets$Avg <= -1)
wordcloud(colnames(negativeTweets), colSums(negativeTweets))
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25), random.order = F)
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25), random.order = F, rot.per = .5)
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25), random.order = F, rot.per = .5 , min.freq = 10, colors = "violet")
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25), random.order = F, rot.per = .1 , min.freq = 10, colors = "violet")
library(wordcloud)
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25), random.order = F, rot.per = 0 , min.freq = 10, colors = "violet")
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25), random.order = F, rot.per = 0.2 , min.freq = 10, colors = "violet")
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25), random.order = F, rot.per = 0.3 , min.freq = 10, colors = "violet")
brewer.pal
display.brewer.all
display.brewer.all()
brewer.pal()
colors=brewer.pal(9, "Blues")
colors
brewer.pal(9, "Blues")[c(-5, -6, -7, -8, -9)]
brewer.pal(9, "Blues")[c(-1, -2, -3, -4)]
brewer.pal(9, "Blues")[c(5, 6, 7, 8, 9)]
wordcloud(colnames(allTweets), colSums(allTweets), scale=c(2, .25), random.order = F, colors = colors)
rm (list = ls())
parole = read.csv("parole.csv")
parole$male = as.factor(parole$male)
parole$state = as.factor(parole$state)
parole$crime = as.factor(parole$crime)
str(parole)
table(parole$violator, parole$male)
table(parole$violator)
14/78
table(parole$male, parole$violator)
table(parole$state, parole$crime)
str(parole$state)
library(ggplot2)
ggplot(data = parole, aes(x = age)) + geom_histogram()
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth = 5)
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth = 5,color="blue")
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth = 5) + facet_grid(male ~ .)
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth = 5) + facet_grid(.~male)
ggplot(data = parole, aes(x = age, fill = male)) + geom_histogram(binwidth = 5)
colorPalette = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(data = parole, aes(x = age, fill = male)) + geom_histogram(binwidth = 5) + scale_fill_manual(values=colorPalette)
ggplot(data = parole, aes(x = age, fill = male)) + geom_histogram(binwidth = 5, position="identity") + scale_fill_manual(values=colorPalette)
ggplot(data = parole, aes(x = age, fill = male)) + geom_histogram(binwidth = 5, position="identity", alpha=0.5) + scale_fill_manual(values=colorPalette)
str(parole)
ggplot(data = parole, aes(x = time.served )) + geom_histogram(binwidth = 1)
ggplot(data = parole, aes(x = time.served )) + geom_histogram(binwidth = .1)
ggplot(data = parole, aes(x = time.served )) + geom_histogram(binwidth = 1) + facet_grid(crime~ .)
ggplot(data = parole, aes(x = time.served, fill = crime )) + geom_histogram(binwidth = 1, position = "identity", alpha = 0.5) + scale_fill_manual(values=colorPalette)
ggplot(data = parole, aes(x = age, fill = male)) + geom_histogram(binwidth = 5, position="identity", alpha=0.5) + scale_fill_manual(values=colorPalette)
ggplot
